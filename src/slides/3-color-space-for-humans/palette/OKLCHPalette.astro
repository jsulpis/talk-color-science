---
const hues = Array.from({ length: 12 }).map(
	(_, i, array) => (360 / array.length) * i
);
const chromas = [0.05, 0.13, 0.21, 0.27, 0.21, 0.12, 0.08];
const lightnesss = [95, 85, 70, 55, 40, 25, 16];
---

<table class="container">
	<thead>
		<tr>
			<th>L</th>
			<th>C \ H</th>
			{hues.map((hue) => <th class="value">{hue}</th>)}
		</tr>
	</thead>
	{
		chromas.map((chroma, i) => (
			<tr
				class={i === 3 ? "rectangle fragment custom" : ""}
				data-fragment-index="1"
			>
				<th class="value">{lightnesss[i]}</th>
				<th class="value">{chroma}</th>
				{hues.map((hue) => (
					<td
						style={`background: oklch(${lightnesss[i]}% ${chroma} ${hue});color:${i < 3 ? "black" : "white"}`}
					>
						<span class="fragment" data-fragment-index="2">
							Aa
						</span>
					</td>
				))}
			</tr>
		))
	}
</table>

<style lang="scss">
	table {
		font-size: 2rem;
		border-spacing: 10px;
		border-collapse: unset;

		th,
		td {
			border: 0;
			text-align: center;
		}

		.value {
			font-size: 0.8em;
		}

		td {
			width: 3dvw;
			aspect-ratio: 5;
		}
		tr {
			position: relative;
		}
		.rectangle::after {
			content: "";
			position: absolute;
			inset: -6px 0px -6px -5px;
			display: inline-flex;
			border-radius: 16px;
		}
		.rectangle.visible::after {
			border: 5px solid rgb(255, 255, 255);
		}
	}
</style>
